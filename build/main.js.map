{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\nimport * as utils from \"@iobroker/adapter-core\";\nimport { SoundcraftUI } from \"soundcraft-ui-connection\";\nimport { Subscription } from \"rxjs\";\n\nclass Soundcraft extends utils.Adapter {\n\tprivate mixer: SoundcraftUI | null = null;\n\tprivate subscriptions: Subscription[] = [];\n\tprivate pollInterval: NodeJS.Timeout | null = null;\n\n\tprivate mixerChannels = { hw: 0, aux: 0, fx: 0, muteGroups: 6 };\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({ ...options, name: \"soundcraft\" });\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\n\tprivate async onReady(): Promise<void> {\n\t\tif (!this.config.mixerIP) {\n\t\t\tthis.log.error(\"Mixer IP address not configured!\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log.info(`Connecting to Soundcraft mixer at ${this.config.mixerIP}`);\n\n\t\ttry {\n\t\t\tthis.mixer = new SoundcraftUI(this.config.mixerIP);\n\n\t\tconst statusSub = this.mixer.status$.subscribe((status) => {\n\t\t\tconst isConnected = status.type === \"OPEN\";\n\t\t\tthis.log.info(`Connection status: ${status.type}`);\n\t\t\tthis.setStateAsync(\"info.connection\", { val: isConnected, ack: true });\n\t\t});\n\t\t\tthis.subscriptions.push(statusSub);\n\n\t\t\tawait this.mixer.connect();\n\t\t\tthis.log.info(\"Successfully connected to mixer\");\n\n\t\t\tawait this.detectMixerCapabilities();\n\t\t\tawait this.createObjectStructure();\n\t\t\tawait this.subscribeMixerStates();\n\n\t\t\tthis.subscribeStates(\"*\");\n\t\t} catch (error) {\n\t\t\tthis.log.error(`Failed to connect to mixer: ${error}`);\n\t\t}\n\t}\n\n\tprivate async detectMixerCapabilities(): Promise<void> {\n\t\tif (!this.mixer) return;\n\n\t\tconst modelName = await this.getStateValueAsync<string>(this.mixer.deviceInfo.model$);\n\t\tthis.log.info(`Detected mixer model: ${modelName || \"Unknown\"}`);\n\n\t\tconst model = String(modelName || \"\");\n\t\tif (model.includes(\"Ui24\")) {\n\t\t\tthis.mixerChannels = { hw: 24, aux: 10, fx: 4, muteGroups: 6 };\n\t\t} else if (model.includes(\"Ui16\")) {\n\t\t\tthis.mixerChannels = { hw: 16, aux: 4, fx: 2, muteGroups: 6 };\n\t\t} else if (model.includes(\"Ui12\")) {\n\t\t\tthis.mixerChannels = { hw: 12, aux: 2, fx: 2, muteGroups: 6 };\n\t\t} else {\n\t\t\tthis.mixerChannels = { hw: 24, aux: 10, fx: 4, muteGroups: 6 };\n\t\t}\n\n\t\tawait this.setStateAsync(\"info.model\", { val: String(modelName || \"Unknown\"), ack: true });\n\t}\n\n\tprivate async createObjectStructure(): Promise<void> {\n\t\tawait this.setObjectNotExistsAsync(\"info\", {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: \"Mixer Information\" },\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"info.connection\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: { name: \"Connection status\", type: \"boolean\", role: \"indicator.connected\", read: true, write: false },\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"info.model\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: { name: \"Mixer model\", type: \"string\", role: \"info.name\", read: true, write: false },\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.createMasterObjects();\n\n\t\tfor (let i = 0; i < this.mixerChannels.hw; i++) {\n\t\t\tawait this.createChannelObjects(\"hw\", i);\n\t\t}\n\n\t\tfor (let i = 0; i < this.mixerChannels.aux; i++) {\n\t\t\tawait this.createAuxObjects(i);\n\t\t}\n\n\t\tfor (let i = 0; i < this.mixerChannels.fx; i++) {\n\t\t\tawait this.createFxObjects(i);\n\t\t}\n\n\t\tfor (let i = 1; i <= this.mixerChannels.muteGroups; i++) {\n\t\t\tawait this.createMuteGroupObjects(i);\n\t\t}\n\n\t\tawait this.createPlayerObjects();\n\t}\n\n\tprivate async createMasterObjects(): Promise<void> {\n\t\tawait this.setObjectNotExistsAsync(\"master\", {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: \"Master Channel\" },\n\t\t\tnative: {},\n\t\t});\n\n\t\tconst states = {\n\t\t\t\"faderLevel\": { name: \"Fader Level\", type: \"number\", role: \"level.volume\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"pan\": { name: \"Pan\", type: \"number\", role: \"level.pan\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"dim\": { name: \"Dim\", type: \"number\", role: \"switch\", min: 0, max: 1, read: true, write: true },\n\t\t};\n\n\t\tfor (const [key, config] of Object.entries(states)) {\n\t\t\tawait this.setObjectNotExistsAsync(`master.${key}`, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: config as any,\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async createChannelObjects(prefix: string, channel: number): Promise<void> {\n\t\tconst basePath = `${prefix}.${channel}`;\n\n\t\tawait this.setObjectNotExistsAsync(basePath, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: `${prefix.toUpperCase()} Channel ${channel}` },\n\t\t\tnative: {},\n\t\t});\n\n\t\tconst states = {\n\t\t\t\"faderLevel\": { name: \"Fader Level\", type: \"number\", role: \"level.volume\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"mute\": { name: \"Mute\", type: \"number\", role: \"switch.mute\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"pan\": { name: \"Pan\", type: \"number\", role: \"level.pan\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"gain\": { name: \"Gain\", type: \"number\", role: \"level\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"phantom\": { name: \"Phantom Power (+48V)\", type: \"number\", role: \"switch\", min: 0, max: 1, read: true, write: true },\n\t\t};\n\n\t\tfor (const [key, config] of Object.entries(states)) {\n\t\t\tawait this.setObjectNotExistsAsync(`${basePath}.${key}`, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: config as any,\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async createAuxObjects(aux: number): Promise<void> {\n\t\tconst basePath = `aux.${aux}`;\n\n\t\tawait this.setObjectNotExistsAsync(basePath, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: `AUX ${aux}` },\n\t\t\tnative: {},\n\t\t});\n\n\t\tconst states = {\n\t\t\t\"faderLevel\": { name: \"Fader Level\", type: \"number\", role: \"level.volume\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"mute\": { name: \"Mute\", type: \"number\", role: \"switch.mute\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"pan\": { name: \"Pan\", type: \"number\", role: \"level.pan\", min: 0, max: 1, read: true, write: true },\n\t\t};\n\n\t\tfor (const [key, config] of Object.entries(states)) {\n\t\t\tawait this.setObjectNotExistsAsync(`${basePath}.${key}`, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: config as any,\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async createFxObjects(fx: number): Promise<void> {\n\t\tconst basePath = `fx.${fx}`;\n\n\t\tawait this.setObjectNotExistsAsync(basePath, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: `FX ${fx}` },\n\t\t\tnative: {},\n\t\t});\n\n\t\tconst states = {\n\t\t\t\"faderLevel\": { name: \"Fader Level\", type: \"number\", role: \"level.volume\", min: 0, max: 1, read: true, write: true },\n\t\t\t\"mute\": { name: \"Mute\", type: \"number\", role: \"switch.mute\", min: 0, max: 1, read: true, write: true },\n\t\t};\n\n\t\tfor (const [key, config] of Object.entries(states)) {\n\t\t\tawait this.setObjectNotExistsAsync(`${basePath}.${key}`, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: config as any,\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async createMuteGroupObjects(group: number): Promise<void> {\n\t\tawait this.setObjectNotExistsAsync(`muteGroup.${group}`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: { name: `Mute Group ${group}`, type: \"number\", role: \"switch.mute\", min: 0, max: 1, read: true, write: true },\n\t\t\tnative: {},\n\t\t});\n\t}\n\n\tprivate async createPlayerObjects(): Promise<void> {\n\t\tawait this.setObjectNotExistsAsync(\"player\", {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: \"Media Player\" },\n\t\t\tnative: {},\n\t\t});\n\n\t\tconst states = {\n\t\t\t\"state\": { name: \"Player State\", type: \"string\", role: \"media.state\", read: true, write: false },\n\t\t\t\"play\": { name: \"Play\", type: \"boolean\", role: \"button.play\", read: true, write: true },\n\t\t\t\"stop\": { name: \"Stop\", type: \"boolean\", role: \"button.stop\", read: true, write: true },\n\t\t\t\"pause\": { name: \"Pause\", type: \"boolean\", role: \"button.pause\", read: true, write: true },\n\t\t};\n\n\t\tfor (const [key, config] of Object.entries(states)) {\n\t\t\tawait this.setObjectNotExistsAsync(`player.${key}`, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: config as any,\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async subscribeMixerStates(): Promise<void> {\n\t\tif (!this.mixer) return;\n\n\t\tthis.subscriptions.push(\n\t\t\tthis.mixer.master.faderLevel$.subscribe((val: number) =>\n\t\t\t\tthis.setStateAsync(\"master.faderLevel\", { val, ack: true })\n\t\t\t),\n\t\t\tthis.mixer.master.pan$.subscribe((val: number) =>\n\t\t\t\tthis.setStateAsync(\"master.pan\", { val, ack: true })\n\t\t\t),\n\t\t\tthis.mixer.master.dim$.subscribe((val: number) =>\n\t\t\t\tthis.setStateAsync(\"master.dim\", { val, ack: true })\n\t\t\t)\n\t\t);\n\n\t\tfor (let i = 0; i < this.mixerChannels.hw; i++) {\n\t\t\tconst ch = this.mixer.master.input(i);\n\t\t\tconst hwCh = this.mixer.hw(i);\n\t\t\tconst prefix = `hw.${i}`;\n\n\t\t\tthis.subscriptions.push(\n\t\t\t\tch.faderLevel$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.faderLevel`, { val, ack: true })\n\t\t\t\t),\n\t\t\t\tch.mute$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.mute`, { val, ack: true })\n\t\t\t\t),\n\t\t\t\tch.pan$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.pan`, { val, ack: true })\n\t\t\t\t),\n\t\t\t\thwCh.gain$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.gain`, { val, ack: true })\n\t\t\t\t),\n\t\t\t\thwCh.phantom$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.phantom`, { val, ack: true })\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\tfor (let i = 0; i < this.mixerChannels.aux; i++) {\n\t\tconst auxMaster = this.mixer.master.aux(i);\n\t\tconst prefix = `aux.${i}`;\n\n\t\tthis.subscriptions.push(\n\t\t\tauxMaster.faderLevel$.subscribe((val: number) =>\n\t\t\t\tthis.setStateAsync(`${prefix}.faderLevel`, { val, ack: true })\n\t\t\t),\n\t\t\tauxMaster.mute$.subscribe((val: number) =>\n\t\t\t\tthis.setStateAsync(`${prefix}.mute`, { val, ack: true })\n\t\t\t),\n\t\t\tauxMaster.pan$.subscribe((val: number) =>\n\t\t\t\tthis.setStateAsync(`${prefix}.pan`, { val, ack: true })\n\t\t\t)\n\t\t);\n\t}\n\n\t\tfor (let i = 0; i < this.mixerChannels.fx; i++) {\n\t\t\tconst fxMaster = this.mixer.master.fx(i);\n\t\t\tconst prefix = `fx.${i}`;\n\n\t\t\tthis.subscriptions.push(\n\t\t\t\tfxMaster.faderLevel$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.faderLevel`, { val, ack: true })\n\t\t\t\t),\n\t\t\t\tfxMaster.mute$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`${prefix}.mute`, { val, ack: true })\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tfor (let i = 1; i <= this.mixerChannels.muteGroups; i++) {\n\t\t\tconst muteGroup = this.mixer.muteGroup(i as any);\n\t\t\tthis.subscriptions.push(\n\t\t\t\tmuteGroup.state$.subscribe((val: number) =>\n\t\t\t\t\tthis.setStateAsync(`muteGroup.${i}`, { val, ack: true })\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.subscriptions.push(\n\t\t\tthis.mixer.player.state$.subscribe((val) =>\n\t\t\t\tthis.setStateAsync(\"player.state\", { val: String(val), ack: true })\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\tif (!state || state.ack || !this.mixer) return;\n\n\t\tconst idParts = id.split(\".\");\n\t\tconst deviceId = idParts[idParts.length - 2];\n\t\tconst stateName = idParts[idParts.length - 1];\n\n\t\ttry {\n\t\t\tif (id.includes(\".master.\")) {\n\t\t\t\tswitch (stateName) {\n\t\t\t\t\tcase \"faderLevel\":\n\t\t\t\t\t\tthis.mixer.master.setFaderLevel(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pan\":\n\t\t\t\t\t\tthis.mixer.master.setPan(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"dim\":\n\t\t\t\t\t\tthis.mixer.master.setDim(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (id.includes(\".hw.\")) {\n\t\t\t\tconst channelNum = parseInt(deviceId);\n\t\t\t\tswitch (stateName) {\n\t\t\t\t\tcase \"faderLevel\":\n\t\t\t\t\t\tthis.mixer.master.input(channelNum).setFaderLevel(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mute\":\n\t\t\t\t\t\tthis.mixer.master.input(channelNum).setMute(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pan\":\n\t\t\t\t\t\tthis.mixer.master.input(channelNum).setPan(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gain\":\n\t\t\t\t\t\tthis.mixer.hw(channelNum).setGain(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"phantom\":\n\t\t\t\t\t\tthis.mixer.hw(channelNum).setPhantom(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (id.includes(\".aux.\")) {\n\t\t\t\tconst auxNum = parseInt(deviceId);\n\t\t\t\tconst auxMaster = this.mixer.master.aux(auxNum);\n\t\t\t\tswitch (stateName) {\n\t\t\t\t\tcase \"faderLevel\":\n\t\t\t\t\t\tauxMaster.setFaderLevel(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mute\":\n\t\t\t\t\t\tauxMaster.setMute(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pan\":\n\t\t\t\t\t\tauxMaster.setPan(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (id.includes(\".fx.\")) {\n\t\t\t\tconst fxNum = parseInt(deviceId);\n\t\t\t\tconst fxMaster = this.mixer.master.fx(fxNum);\n\t\t\t\tswitch (stateName) {\n\t\t\t\t\tcase \"faderLevel\":\n\t\t\t\t\t\tfxMaster.setFaderLevel(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mute\":\n\t\t\t\t\t\tfxMaster.setMute(Number(state.val));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (id.includes(\".muteGroup.\")) {\n\t\t\t\tconst groupNum = parseInt(idParts[idParts.length - 1]);\n\t\t\t\tconst muteGroup = this.mixer.muteGroup(groupNum as any);\n\t\t\t\tif (Number(state.val) === 1) {\n\t\t\t\t\tmuteGroup.mute();\n\t\t\t\t} else {\n\t\t\t\t\tmuteGroup.unmute();\n\t\t\t\t}\n\t\t\t} else if (id.includes(\".player.\")) {\n\t\t\t\tswitch (stateName) {\n\t\t\t\t\tcase \"play\":\n\t\t\t\t\t\tif (state.val) this.mixer.player.play();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stop\":\n\t\t\t\t\t\tif (state.val) this.mixer.player.stop();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pause\":\n\t\t\t\t\t\tif (state.val) this.mixer.player.pause();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`Error handling state change for ${id}: ${error}`);\n\t\t}\n\t}\n\n\tprivate async getStateValueAsync<T>(observable: any): Promise<T | undefined> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet sub: any;\n\t\t\tsub = observable.subscribe((val: T) => {\n\t\t\t\tif (sub) {\n\t\t\t\t\tsub.unsubscribe();\n\t\t\t\t}\n\t\t\t\tresolve(val);\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (sub) {\n\t\t\t\t\tsub.unsubscribe();\n\t\t\t\t}\n\t\t\t\tresolve(undefined);\n\t\t\t}, 1000);\n\t\t});\n\t}\n\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tthis.log.info(\"Disconnecting from mixer...\");\n\n\t\t\tif (this.pollInterval) {\n\t\t\t\tclearInterval(this.pollInterval);\n\t\t\t\tthis.pollInterval = null;\n\t\t\t}\n\n\t\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\n\t\t\tthis.subscriptions = [];\n\n\t\t\tif (this.mixer) {\n\t\t\t\tthis.mixer.disconnect();\n\t\t\t\tthis.mixer = null;\n\t\t\t}\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tthis.log.error(`Error during unload: ${e}`);\n\t\t\tcallback();\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Soundcraft(options);\n} else {\n\t(() => new Soundcraft())();\n}\n"],
  "mappings": "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",
  "names": []
}
